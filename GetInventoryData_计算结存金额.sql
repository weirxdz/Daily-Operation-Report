USE [UFDATA_001_2011]
GO
/****** Object:  StoredProcedure [dbo].[GetInventoryData]    Script Date: 10/16/2023 01:53:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetInventoryData]
@inputDate DATE--查询日期 
AS
BEGIN
	SET NOCOUNT ON

	DECLARE @dsdate DATE,@IYEAR INT,@IPERIOD INT,@DBDATE_Y DATE,@DBDATE_M DATE,@DEDATE DATE
	SET @dsdate='2011-07-26'--模块启用日期,如果有帐套卸出还是以最初的启用日期

	IF MONTH(@inputDate) = 12 
	BEGIN
		SET @DBDATE_Y=dateadd(dd,-day(dateadd(month,-1,@inputDate))+26,dateadd(month,-1,@inputDate))
		SET @DBDATE_M=dateadd(dd,-day(dateadd(month,-1,@inputDate))+26,dateadd(month,-1,@inputDate))
		SET @DEDATE=@inputDate
	END
	IF MONTH(@inputDate) <> 12 AND DAY(@inputDate) < 26 
	BEGIN
		SET @DBDATE_Y=CONVERT(date,convert(nvarchar(4),YEAR(@inputDate)-1)+'-11-26')
		SET @DBDATE_M=dateadd(dd,-day(dateadd(month,-1,@inputDate))+26,dateadd(month,-1,@inputDate))
		SET @DEDATE=@inputDate
	END
	IF MONTH(@inputDate) <> 12 AND DAY(@inputDate) >= 26 
	BEGIN
		SET @DBDATE_Y=CONVERT(date,convert(nvarchar(4),YEAR(@inputDate)-1)+'-11-26')
		SET @DBDATE_M=DATEADD(day,26 - DAY(@inputDate),@inputDate)
		SET @DEDATE=@inputDate
	END
	
	IF OBJECT_ID('TEMPDB..#A') IS NOT NULL
	BEGIN
	DROP TABLE    #A
	END
	IF OBJECT_ID('TEMPDB..#RDRECORD01') IS NOT NULL
	BEGIN
	DROP TABLE    #RDRECORD01
	END
	IF OBJECT_ID('TEMPDB..#RDRECORD08') IS NOT NULL
	BEGIN
	DROP TABLE    #RDRECORD08
	END
	IF OBJECT_ID('TEMPDB..#RDRECORD09') IS NOT NULL
	BEGIN
	DROP TABLE    #RDRECORD09
	END
	IF OBJECT_ID('TEMPDB..#RDRECORD10') IS NOT NULL
	BEGIN
	DROP TABLE    #RDRECORD10
	END
	IF OBJECT_ID('TEMPDB..#RDRECORD32') IS NOT NULL
	BEGIN
	DROP TABLE    #RDRECORD32
	END
	IF OBJECT_ID('TEMPDB..#RDRECORD34') IS NOT NULL
	BEGIN
	DROP TABLE    #RDRECORD34
	END
	IF OBJECT_ID('TEMPDB..#RDRECORD11') IS NOT NULL
	BEGIN
	DROP TABLE    #RDRECORD11
	END
/*采购入库单*/
	SELECT ID INTO #RDRECORD01 FROM RDRECORD01 RDRECORD 
	WHERE 1=1 
	and ((RdRecord.dDate < @dsdate And IsNull(RdRecord.bIsSTQc,0) = 1)
		Or (RdRecord.dDate >= @dsdate
		And IsNull(RdRecord.bPUFirst,0) = 0
		And IsNull(RdRecord.bIAFirst,0) = 0
		And IsNull(RdRecord.bOMFirst,0) = 0
		And (not (RdRecord.cBusType = N'假退料'and RdRecord.cVouchType = 11))
		))
	AND  DDATE <= @DEDATE AND DDATE >= @DBDATE_Y

/*其它入库单*/
	SELECT ID INTO #RDRECORD08 FROM RDRECORD08 RDRECORD 
	WHERE 1=1 
	and ((RdRecord.dDate < @dsdate And IsNull(RdRecord.bIsSTQc,0) = 1)
		Or (RdRecord.dDate >= @dsdate
		And IsNull(RdRecord.bPUFirst,0) = 0
		And IsNull(RdRecord.bIAFirst,0) = 0
		And IsNull(RdRecord.bOMFirst,0) = 0
		And (not (RdRecord.cBusType = N'假退料'and RdRecord.cVouchType = 11))
		))
	AND  DDATE <= @DEDATE AND DDATE >= @DBDATE_Y 
/*其它出库单*/
	SELECT ID INTO #RDRECORD09 FROM RDRECORD09 RDRECORD 
	WHERE 1=1 
	and ((RdRecord.dDate < @dsdate And IsNull(RdRecord.bIsSTQc,0) = 1)
		Or (RdRecord.dDate >= @dsdate
		And IsNull(RdRecord.bPUFirst,0) = 0
		And IsNull(RdRecord.bIAFirst,0) = 0
		And IsNull(RdRecord.bOMFirst,0) = 0
		And (not (RdRecord.cBusType = N'假退料'and RdRecord.cVouchType = 11))
		))
	AND  DDATE <= @DEDATE 
/*产成品入库单*/
	SELECT ID INTO #RDRECORD10 FROM RDRECORD10 RDRECORD WHERE 1 = 1 
	AND ISNULL(RDRECORD.BPUFIRST,0) = 0
	AND ISNULL(RDRECORD.BIAFIRST,0) = 0
	AND ISNULL(RDRECORD.BOMFIRST,0) = 0
	AND (NOT (RDRECORD.CBUSTYPE = N'假退料'AND RDRECORD.CVOUCHTYPE = 11))
	AND  DDATE <= @DEDATE AND DDATE >= @DBDATE_Y 
/*材料出库单*/
	SELECT ID INTO #RDRECORD11 FROM RDRECORD11 RDRECORD 
	WHERE 1=1 
	and ((RdRecord.dDate < @dsdate And IsNull(RdRecord.bIsSTQc,0) = 1)
		Or (RdRecord.dDate >= @dsdate
		And IsNull(RdRecord.bPUFirst,0) = 0
		And IsNull(RdRecord.bIAFirst,0) = 0
		And IsNull(RdRecord.bOMFirst,0) = 0
		And (not (RdRecord.cBusType = N'假退料'and RdRecord.cVouchType = 11))
		))
	AND  DDATE <= @DEDATE AND DDATE >= @DBDATE_Y 
/*销售出库单*/
	SELECT ID INTO #RDRECORD32 FROM RDRECORD32 RDRECORD 
	WHERE 1=1 
	and ((RdRecord.dDate < @dsdate And IsNull(RdRecord.bIsSTQc,0) = 1)
		Or (RdRecord.dDate >= @dsdate
		And IsNull(RdRecord.bPUFirst,0) = 0
		And IsNull(RdRecord.bIAFirst,0) = 0
		And IsNull(RdRecord.bOMFirst,0) = 0
		And (not (RdRecord.cBusType = N'假退料'and RdRecord.cVouchType = 11))
		))
	AND  DDATE <= @DEDATE AND DDATE >= @DBDATE_Y 
/*库存期初表*/
	SELECT ID INTO #RDRECORD34 FROM RDRECORD34 RDRECORD 
	WHERE 1=1 
	and ((RdRecord.dDate < @dsdate And IsNull(RdRecord.bIsSTQc,0) = 1)
		Or (RdRecord.dDate >= @dsdate
		And IsNull(RdRecord.bPUFirst,0) = 0
		And IsNull(RdRecord.bIAFirst,0) = 0
		And IsNull(RdRecord.bOMFirst,0) = 0
		And (not (RdRecord.cBusType = N'假退料'and RdRecord.cVouchType = 11))
		))
	--AND  DDATE <= @DEDATE AND DDATE >= @DBDATE_Y 

	/*单据数据取数模板*/
	SELECT RDRECORD.dDate AS DBILLDATE,RDRECORD.CWHCODE,WAREHOUSE.CWHNAME,INVENTORY.CINVCCODE ,INVENTORYCLASS.CINVCNAME ,RDRECORDS.CINVCODE,INVENTORY.CINVNAME,RDRECORD.BRDFLAG,LEFT(RDRECORD.CRDCODE,3) AS CRDCODE,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN
	  CASE WHEN RDRECORD.BRDFLAG <>0 THEN 1 ELSE -1 END ELSE 0 END) * CONVERT(DECIMAL(38,8),IQUANTITY)  AS IQUANTITY,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN 0 ELSE
	  CASE WHEN RDRECORD.BRDFLAG <>0 THEN 1 ELSE -1 END  END) * CONVERT(DECIMAL(38,8),IQUANTITY)  AS IQCJCSL,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN
	  CASE WHEN RDRECORD.BRDFLAG <>0 THEN 1 ELSE 0 END ELSE 0 END) * CONVERT(DECIMAL(38,8),IQUANTITY)  AS IINQUANTITY,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN
	  CASE WHEN RDRECORD.BRDFLAG <>0 THEN 0 ELSE 1 END ELSE 0 END) * CONVERT(DECIMAL(38,8),IQUANTITY)  AS IOUTQUANTITY,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN
	( CASE WHEN RDRECORD.BRDFLAG <>0 THEN 1 ELSE -1 END ) * CONVERT(DECIMAL(38,8),IQUANTITY) END)  AS IQMJCSL,
	CONVERT(DECIMAL (38,6),ISNULL(INVENTORY.IINVSPRICE,0)) AS IUNITCOST
	INTO #A
	FROM
	RDRECORD01 RDRECORD LEFT JOIN RDRECORDS01 RDRECORDS ON RDRECORD.ID=RDRECORDS.ID
	LEFT JOIN INVENTORY ON RDRECORDS.CINVCODE=INVENTORY.CINVCODE
	LEFT JOIN WAREHOUSE ON RDRECORD.CWHCODE = WAREHOUSE.CWHCODE
	LEFT JOIN INVENTORYCLASS ON INVENTORY.CINVCCODE = INVENTORYCLASS.CINVCCODE
	LEFT JOIN DEPARTMENT ON RDRECORD.CDEPCODE =DEPARTMENT.CDEPCODE
	WHERE 1=0 
	/*单据数据取数模板结束*/

/*采购入库单数据*/
	INSERT INTO #A SELECT RDRECORD.dDate AS DBILLDATE,RDRECORD.CWHCODE,WAREHOUSE.CWHNAME,INVENTORY.CINVCCODE ,INVENTORYCLASS.CINVCNAME ,RDRECORDS.CINVCODE,INVENTORY.CINVNAME,RDRECORD.BRDFLAG,LEFT(RDRECORD.CRDCODE,3) AS CRDCODE,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN
	  CASE WHEN RDRECORD.BRDFLAG <>0 THEN 1 ELSE -1 END ELSE 0 END) * CONVERT(DECIMAL(38,8),IQUANTITY)  AS IQUANTITY,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN 0 ELSE
	  CASE WHEN RDRECORD.BRDFLAG <>0 THEN 1 ELSE -1 END  END) * CONVERT(DECIMAL(38,8),IQUANTITY)  AS IQCJCSL,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN
	  CASE WHEN RDRECORD.BRDFLAG <>0 THEN 1 ELSE 0 END ELSE 0 END) * CONVERT(DECIMAL(38,8),IQUANTITY)  AS IINQUANTITY,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN
	  CASE WHEN RDRECORD.BRDFLAG <>0 THEN 0 ELSE 1 END ELSE 0 END) * CONVERT(DECIMAL(38,8),IQUANTITY)  AS IOUTQUANTITY,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN
	( CASE WHEN RDRECORD.BRDFLAG <>0 THEN 1 ELSE -1 END ) * CONVERT(DECIMAL(38,8),IQUANTITY) END)  AS IQMJCSL,
	CONVERT(DECIMAL (38,6),ISNULL(INVENTORY.IINVSPRICE,0)) AS IUNITCOST
	FROM
	RDRECORD01 RDRECORD LEFT JOIN RDRECORDS01 RDRECORDS ON RDRECORD.ID=RDRECORDS.ID
	LEFT JOIN INVENTORY ON RDRECORDS.CINVCODE=INVENTORY.CINVCODE
	LEFT JOIN WAREHOUSE ON RDRECORD.CWHCODE = WAREHOUSE.CWHCODE
	LEFT JOIN INVENTORYCLASS ON INVENTORY.CINVCCODE = INVENTORYCLASS.CINVCCODE
	LEFT JOIN DEPARTMENT ON RDRECORD.CDEPCODE =DEPARTMENT.CDEPCODE
	WHERE	RDRECORD.ID IN (SELECT ID FROM  #RDRECORD01 ) 
/*其他入库单数据*/
	INSERT INTO #A SELECT RDRECORD.dDate AS DBILLDATE,RDRECORD.CWHCODE,WAREHOUSE.CWHNAME,INVENTORY.CINVCCODE ,INVENTORYCLASS.CINVCNAME ,RDRECORDS.CINVCODE,INVENTORY.CINVNAME,RDRECORD.BRDFLAG,LEFT(RDRECORD.CRDCODE,3) AS CRDCODE,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN
	  CASE WHEN RDRECORD.BRDFLAG <>0 THEN 1 ELSE -1 END ELSE 0 END) * CONVERT(DECIMAL(38,8),IQUANTITY)  AS IQUANTITY,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN 0 ELSE
	  CASE WHEN RDRECORD.BRDFLAG <>0 THEN 1 ELSE -1 END  END) * CONVERT(DECIMAL(38,8),IQUANTITY)  AS IQCJCSL,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN
	  CASE WHEN RDRECORD.BRDFLAG <>0 THEN 1 ELSE 0 END ELSE 0 END) * CONVERT(DECIMAL(38,8),IQUANTITY)  AS IINQUANTITY,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN
	  CASE WHEN RDRECORD.BRDFLAG <>0 THEN 0 ELSE 1 END ELSE 0 END) * CONVERT(DECIMAL(38,8),IQUANTITY)  AS IOUTQUANTITY,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN
	( CASE WHEN RDRECORD.BRDFLAG <>0 THEN 1 ELSE -1 END ) * CONVERT(DECIMAL(38,8),IQUANTITY) END)  AS IQMJCSL,
	CONVERT(DECIMAL (38,6),ISNULL(INVENTORY.IINVSPRICE,0)) AS IUNITCOST
	FROM
	RDRECORD08 RDRECORD LEFT JOIN RDRECORDS08 RDRECORDS ON RDRECORD.ID=RDRECORDS.ID
	LEFT JOIN INVENTORY ON RDRECORDS.CINVCODE=INVENTORY.CINVCODE
	LEFT JOIN WAREHOUSE ON RDRECORD.CWHCODE = WAREHOUSE.CWHCODE
	LEFT JOIN INVENTORYCLASS ON INVENTORY.CINVCCODE = INVENTORYCLASS.CINVCCODE
	LEFT JOIN DEPARTMENT ON RDRECORD.CDEPCODE =DEPARTMENT.CDEPCODE
	WHERE
	RDRECORD.ID IN (SELECT ID FROM  #RDRECORD08 ) 

/*其他出库单数据*/
	INSERT INTO #A SELECT RDRECORD.dDate AS DBILLDATE,RDRECORD.CWHCODE,WAREHOUSE.CWHNAME,INVENTORY.CINVCCODE ,INVENTORYCLASS.CINVCNAME ,RDRECORDS.CINVCODE,INVENTORY.CINVNAME,RDRECORD.BRDFLAG,LEFT(RDRECORD.CRDCODE,3) AS CRDCODE,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN
	  CASE WHEN RDRECORD.BRDFLAG <>0 THEN 1 ELSE -1 END ELSE 0 END) * CONVERT(DECIMAL(38,8),IQUANTITY)  AS IQUANTITY,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN 0 ELSE
	  CASE WHEN RDRECORD.BRDFLAG <>0 THEN 1 ELSE -1 END  END) * CONVERT(DECIMAL(38,8),IQUANTITY)  AS IQCJCSL,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN
	  CASE WHEN RDRECORD.BRDFLAG <>0 THEN 1 ELSE 0 END ELSE 0 END) * CONVERT(DECIMAL(38,8),IQUANTITY)  AS IINQUANTITY,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN
	  CASE WHEN RDRECORD.BRDFLAG <>0 THEN 0 ELSE 1 END ELSE 0 END) * CONVERT(DECIMAL(38,8),IQUANTITY)  AS IOUTQUANTITY,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN
	( CASE WHEN RDRECORD.BRDFLAG <>0 THEN 1 ELSE -1 END ) * CONVERT(DECIMAL(38,8),IQUANTITY) END)  AS IQMJCSL,
	CONVERT(DECIMAL (38,6),ISNULL(INVENTORY.IINVSPRICE,0)) AS IUNITCOST
	FROM
	RDRECORD09 RDRECORD LEFT JOIN RDRECORDS09 RDRECORDS ON RDRECORD.ID=RDRECORDS.ID
	LEFT JOIN INVENTORY ON RDRECORDS.CINVCODE=INVENTORY.CINVCODE
	LEFT JOIN WAREHOUSE ON RDRECORD.CWHCODE = WAREHOUSE.CWHCODE
	LEFT JOIN INVENTORYCLASS ON INVENTORY.CINVCCODE = INVENTORYCLASS.CINVCCODE
	LEFT JOIN DEPARTMENT ON RDRECORD.CDEPCODE =DEPARTMENT.CDEPCODE
	WHERE
	RDRECORD.ID IN (SELECT ID FROM  #RDRECORD09 ) 

/*产成品入库单数据*/
	INSERT INTO #A SELECT RDRECORD.dDate AS DBILLDATE,RDRECORD.CWHCODE,WAREHOUSE.CWHNAME,INVENTORY.CINVCCODE ,INVENTORYCLASS.CINVCNAME ,RDRECORDS.CINVCODE,INVENTORY.CINVNAME,RDRECORD.BRDFLAG,LEFT(RDRECORD.CRDCODE,3) AS CRDCODE,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN
	  CASE WHEN RDRECORD.BRDFLAG <>0 THEN 1 ELSE -1 END ELSE 0 END) * CONVERT(DECIMAL(38,8),IQUANTITY)  AS IQUANTITY,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN 0 ELSE
	  CASE WHEN RDRECORD.BRDFLAG <>0 THEN 1 ELSE -1 END  END) * CONVERT(DECIMAL(38,8),IQUANTITY)  AS IQCJCSL,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN
	  CASE WHEN RDRECORD.BRDFLAG <>0 THEN 1 ELSE 0 END ELSE 0 END) * CONVERT(DECIMAL(38,8),IQUANTITY)  AS IINQUANTITY,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN
	  CASE WHEN RDRECORD.BRDFLAG <>0 THEN 0 ELSE 1 END ELSE 0 END) * CONVERT(DECIMAL(38,8),IQUANTITY)  AS IOUTQUANTITY,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN
	( CASE WHEN RDRECORD.BRDFLAG <>0 THEN 1 ELSE -1 END ) * CONVERT(DECIMAL(38,8),IQUANTITY)  END) AS IQMJCSL,
	CONVERT(DECIMAL (38,6),ISNULL(INVENTORY.IINVSPRICE,0)) AS IUNITCOST
	FROM
	RDRECORD10 RDRECORD LEFT JOIN RDRECORDS10 RDRECORDS ON RDRECORD.ID=RDRECORDS.ID
	LEFT JOIN INVENTORY ON RDRECORDS.CINVCODE=INVENTORY.CINVCODE
	LEFT JOIN WAREHOUSE ON RDRECORD.CWHCODE = WAREHOUSE.CWHCODE
	LEFT JOIN INVENTORYCLASS ON INVENTORY.CINVCCODE = INVENTORYCLASS.CINVCCODE
	LEFT JOIN DEPARTMENT ON RDRECORD.CDEPCODE =DEPARTMENT.CDEPCODE
	WHERE
	RDRECORD.ID IN (SELECT ID FROM  #RDRECORD10 ) 

/*材料出库单数据*/
	INSERT INTO #A SELECT RDRECORD.dDate AS DBILLDATE,RDRECORD.CWHCODE,WAREHOUSE.CWHNAME,INVENTORY.CINVCCODE ,INVENTORYCLASS.CINVCNAME ,RDRECORDS.CINVCODE,INVENTORY.CINVNAME,RDRECORD.BRDFLAG,LEFT(RDRECORD.CRDCODE,3) AS CRDCODE,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN
	  CASE WHEN RDRECORD.BRDFLAG <>0 THEN 1 ELSE -1 END ELSE 0 END) * CONVERT(DECIMAL(38,8),IQUANTITY)  AS IQUANTITY,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN 0 ELSE
	  CASE WHEN RDRECORD.BRDFLAG <>0 THEN 1 ELSE -1 END  END) * CONVERT(DECIMAL(38,8),IQUANTITY)  AS IQCJCSL,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN
	  CASE WHEN RDRECORD.BRDFLAG <>0 THEN 1 ELSE 0 END ELSE 0 END) * CONVERT(DECIMAL(38,8),IQUANTITY)  AS IINQUANTITY,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN
	  CASE WHEN RDRECORD.BRDFLAG <>0 THEN 0 ELSE 1 END ELSE 0 END) * CONVERT(DECIMAL(38,8),IQUANTITY)  AS IOUTQUANTITY,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN
	( CASE WHEN RDRECORD.BRDFLAG <>0 THEN 1 ELSE -1 END ) * CONVERT(DECIMAL(38,8),IQUANTITY) END)  AS IQMJCSL,
	CONVERT(DECIMAL (38,6),ISNULL(INVENTORY.IINVSPRICE,0)) AS IUNITCOST
	FROM
	RDRECORD11 RDRECORD LEFT JOIN RDRECORDS11 RDRECORDS ON RDRECORD.ID=RDRECORDS.ID
	LEFT JOIN INVENTORY ON RDRECORDS.CINVCODE=INVENTORY.CINVCODE
	LEFT JOIN WAREHOUSE ON RDRECORD.CWHCODE = WAREHOUSE.CWHCODE
	LEFT JOIN INVENTORYCLASS ON INVENTORY.CINVCCODE = INVENTORYCLASS.CINVCCODE
	LEFT JOIN DEPARTMENT ON RDRECORD.CDEPCODE =DEPARTMENT.CDEPCODE
	WHERE
	RDRECORD.ID IN (SELECT ID FROM  #RDRECORD11 ) 

/*销售出库单数据*/
	INSERT INTO #A SELECT RDRECORD.dDate AS DBILLDATE,RDRECORD.CWHCODE,WAREHOUSE.CWHNAME,INVENTORY.CINVCCODE ,INVENTORYCLASS.CINVCNAME ,RDRECORDS.CINVCODE,INVENTORY.CINVNAME,RDRECORD.BRDFLAG,LEFT(RDRECORD.CRDCODE,3) AS CRDCODE,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN
	  CASE WHEN RDRECORD.BRDFLAG <>0 THEN 1 ELSE -1 END ELSE 0 END) * CONVERT(DECIMAL(38,8),IQUANTITY)  AS IQUANTITY,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN 0 ELSE
	  CASE WHEN RDRECORD.BRDFLAG <>0 THEN 1 ELSE -1 END  END) * CONVERT(DECIMAL(38,8),IQUANTITY)  AS IQCJCSL,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN
	  CASE WHEN RDRECORD.BRDFLAG <>0 THEN 1 ELSE 0 END ELSE 0 END) * CONVERT(DECIMAL(38,8),IQUANTITY)  AS IINQUANTITY,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN
	  CASE WHEN RDRECORD.BRDFLAG <>0 THEN 0 ELSE 1 END ELSE 0 END) * CONVERT(DECIMAL(38,8),IQUANTITY)  AS IOUTQUANTITY,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN
	( CASE WHEN RDRECORD.BRDFLAG <>0 THEN 1 ELSE -1 END ) * CONVERT(DECIMAL(38,8),IQUANTITY) END) AS IQMJCSL,
	CONVERT(DECIMAL (38,6),ISNULL(INVENTORY.IINVSPRICE,0)) AS IUNITCOST
	FROM
	RDRECORD32 RDRECORD LEFT JOIN RDRECORDS32 RDRECORDS ON RDRECORD.ID=RDRECORDS.ID
	LEFT JOIN INVENTORY ON RDRECORDS.CINVCODE=INVENTORY.CINVCODE
	LEFT JOIN WAREHOUSE ON RDRECORD.CWHCODE = WAREHOUSE.CWHCODE
	LEFT JOIN INVENTORYCLASS ON INVENTORY.CINVCCODE = INVENTORYCLASS.CINVCCODE
	LEFT JOIN DEPARTMENT ON RDRECORD.CDEPCODE =DEPARTMENT.CDEPCODE
	WHERE
	RDRECORD.ID IN (SELECT ID FROM  #RDRECORD32 ) 

/*库存期初数据*/
	INSERT INTO #A SELECT RDRECORD.dDate AS DBILLDATE,RDRECORD.CWHCODE,WAREHOUSE.CWHNAME,INVENTORY.CINVCCODE ,INVENTORYCLASS.CINVCNAME ,RDRECORDS.CINVCODE,INVENTORY.CINVNAME,RDRECORD.BRDFLAG,LEFT(RDRECORD.CRDCODE,3) AS CRDCODE,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN
	  CASE WHEN RDRECORD.BRDFLAG <>0 THEN 1 ELSE -1 END ELSE 0 END) * CONVERT(DECIMAL(38,8),IQUANTITY)  AS IQUANTITY,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN 0 ELSE
	  CASE WHEN RDRECORD.BRDFLAG <>0 THEN 1 ELSE -1 END  END) * CONVERT(DECIMAL(38,8),IQUANTITY)  AS IQCJCSL,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN
	  CASE WHEN RDRECORD.BRDFLAG <>0 THEN 1 ELSE 0 END ELSE 0 END) * CONVERT(DECIMAL(38,8),IQUANTITY)  AS IINQUANTITY,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN
	  CASE WHEN RDRECORD.BRDFLAG <>0 THEN 0 ELSE 1 END ELSE 0 END) * CONVERT(DECIMAL(38,8),IQUANTITY)  AS IOUTQUANTITY,
	(CASE WHEN  ( DDATE>=@DBDATE_Y AND ISNULL(BISSTQC,0)=0) THEN
	( CASE WHEN RDRECORD.BRDFLAG <>0 THEN 1 ELSE -1 END ) * CONVERT(DECIMAL(38,8),IQUANTITY) END)  AS IQMJCSL,
	CONVERT(DECIMAL (38,6),ISNULL(INVENTORY.IINVSPRICE,0)) AS IUNITCOST
	FROM
	RDRECORD34 RDRECORD LEFT JOIN RDRECORDS34 RDRECORDS ON RDRECORD.ID=RDRECORDS.ID
	LEFT JOIN INVENTORY ON RDRECORDS.CINVCODE=INVENTORY.CINVCODE
	LEFT JOIN WAREHOUSE ON RDRECORD.CWHCODE = WAREHOUSE.CWHCODE
	LEFT JOIN INVENTORYCLASS ON INVENTORY.CINVCCODE = INVENTORYCLASS.CINVCCODE
	LEFT JOIN DEPARTMENT ON RDRECORD.CDEPCODE =DEPARTMENT.CDEPCODE
	WHERE
	RDRECORD.ID IN (SELECT ID FROM  #RDRECORD34 ) 
	
/*收发存汇总明细表数据,用于填充年度期初数据*/
	INSERT INTO #A SELECT dateadd(day, -1, @DBDATE_Y) AS DBILLDATE,A.CWHCODE,WAREHOUSE.CWHNAME,INVENTORY.CINVCCODE ,INVENTORYCLASS.CINVCNAME ,A.CINVCODE,INVENTORY.CINVNAME,1 AS BRDFLAG,LEFT(A.CRDCODE,3) AS CRDCODE,
	0  AS IQUANTITY,
	CONVERT(DECIMAL(38,8),IQUANTITY)  AS IQCJCSL,
	0  AS IINQUANTITY,
	0  AS IOUTQUANTITY,
	CONVERT(DECIMAL(38,8),IQUANTITY)  AS IQMJCSL,
	CONVERT(DECIMAL (38,6),ISNULL(INVENTORY.IINVSPRICE,0)) AS IUNITCOST
	FROM
	ST_MonthAccounts  as a 
	LEFT JOIN INVENTORY ON a.CINVCODE=INVENTORY.CINVCODE
	LEFT JOIN WAREHOUSE ON a.CWHCODE = WAREHOUSE.CWHCODE
	LEFT JOIN INVENTORYCLASS ON INVENTORY.CINVCCODE = INVENTORYCLASS.CINVCCODE
	LEFT JOIN DEPARTMENT ON a.CDEPCODE =DEPARTMENT.CDEPCODE
	WHERE iYear = YEAR(@DBDATE_Y) and iMonth = MONTH(@DBDATE_Y)
	

/*#A 表中存的是截止到 查询结束时间 的单据记录 
*然后计算求和数据
*/
	SELECT I.DIM_INVENTORY, 
	-- SUM(CASE WHEN DBILLDATE < @DBDATE_Y THEN IQMJCSL ELSE 0 end) AS  年度期初结存数量  ,
	-- SUM(CASE WHEN DBILLDATE < @DBDATE_Y THEN CONVERT(DECIMAL(36,2), IQMJCSL * (ISNULL(Z.M_PRICE,Y.NPRICE)))  ELSE 0 end) AS 年度期初结存金额, 
	-- SUM(CASE WHEN DBILLDATE >= @DBDATE_Y AND DBILLDATE <= @DEDATE THEN IINQUANTITY  ELSE 0 end) AS 年度总计_入库数量,
	-- SUM(CASE WHEN DBILLDATE >= @DBDATE_Y AND DBILLDATE <= @DEDATE THEN CONVERT(DECIMAL(36,2),IINQUANTITY*(ISNULL(Z.M_PRICE,Y.NPRICE))) ELSE 0 end) AS 年度总计_入库金额 , 
	-- SUM(CASE WHEN DBILLDATE >= @DBDATE_Y AND DBILLDATE <= @DEDATE THEN IOUTQUANTITY  ELSE 0 end)AS 年度总计_出库数量,
	-- SUM(CASE WHEN DBILLDATE >= @DBDATE_Y AND DBILLDATE <= @DEDATE THEN CONVERT(DECIMAL(36,2),IOUTQUANTITY*(ISNULL(Z.M_PRICE,Y.NPRICE)))  ELSE 0 end) AS 年度总计_出库金额 ,
	-- SUM(CASE WHEN DBILLDATE <= @DEDATE THEN IQMJCSL  ELSE 0 end)AS 年度期末结存数量,
	SUM(CASE WHEN DBILLDATE <= @DEDATE THEN CONVERT(DECIMAL(36,2),IQMJCSL*(ISNULL(Z.M_PRICE,Y.NPRICE)))   ELSE 0 end)AS 年度期末结存金额 ,
	-- SUM(CASE WHEN DBILLDATE < @DBDATE_M THEN IQMJCSL ELSE 0 end) AS  月度期初结存数量  ,
	-- SUM(CASE WHEN DBILLDATE < @DBDATE_M THEN CONVERT(DECIMAL(36,2), IQMJCSL * (ISNULL(Z.M_PRICE,Y.NPRICE)))  ELSE 0 end) AS 月度期初结存金额, 
	-- SUM(CASE WHEN DBILLDATE >= @DBDATE_M AND DBILLDATE <= @DEDATE THEN IINQUANTITY  ELSE 0 end) AS 月度总计_入库数量,
	-- SUM(CASE WHEN DBILLDATE >= @DBDATE_M AND DBILLDATE <= @DEDATE THEN CONVERT(DECIMAL(36,2),IINQUANTITY*(ISNULL(Z.M_PRICE,Y.NPRICE))) ELSE 0 end) AS 月度总计_入库金额 , 
	-- SUM(CASE WHEN DBILLDATE >= @DBDATE_M AND DBILLDATE <= @DEDATE THEN IOUTQUANTITY  ELSE 0 end)AS 月度总计_出库数量,
	-- SUM(CASE WHEN DBILLDATE >= @DBDATE_M AND DBILLDATE <= @DEDATE THEN CONVERT(DECIMAL(36,2),IOUTQUANTITY*(ISNULL(Z.M_PRICE,Y.NPRICE)))  ELSE 0 end) AS 月度总计_出库金额 ,
	-- SUM(CASE WHEN DBILLDATE <= @DEDATE THEN IQMJCSL  ELSE 0 end)AS 月度期末结存数量,
	SUM(CASE WHEN DBILLDATE <= @DEDATE THEN CONVERT(DECIMAL(36,2),IQMJCSL*(ISNULL(Z.M_PRICE,Y.NPRICE)))   ELSE 0 end)AS 月度期末结存金额 
	FROM #A A  
	LEFT JOIN INVENTORY I ON A.CINVCODE=I.CINVCODE 
	LEFT JOIN COMPUTATIONUNIT ON I.CCOMUNITCODE = COMPUTATIONUNIT.CCOMUNITCODE
	-- left join wlfl on A.CINVCCODE = wlfl.分类编码
	LEFT JOIN (SELECT x.cInvCode,x.nnum,x.nmny,round(x.nmny/x.nnum,4) as nprice
			FROM (SELECT t.cInvCode,t.iYear,t.iMonth,sum(t.iNum) as nnum,sum(t.iMoney) as nmny,
						row_number() OVER(partition by t.cInvCode ORDER BY t.iYear desc,t.iMonth desc) as rn
				FROM IA_Summary as t
				WHERE t.iMoney <> 0 AND t.iMonth <> 0 AND t.iNum <> 0
				GROUP BY t.cInvCode,t.iYear,t.iMonth having SUM(t.iNum)<>0) as x
			WHERE x.rn = 1) AS Y
		ON A.CINVCODE = Y.cInvCode
	LEFT JOIN (SELECT t.cInvCode,t.iYear,t.iMonth,sum(t.iNum) as nnum,sum(t.iMoney) as nmny,
					round(sum(t.iMoney)/sum(t.iNum),4) as m_price
				FROM IA_Summary as t
				WHERE t.iMoney <> 0 AND t.iMonth <> 0 AND t.iNum <> 0
				GROUP BY t.cInvCode,t.iYear,t.iMonth HAVING sum(t.iNum) <> 0) AS Z
		ON A.CINVCODE = Z.cInvCode AND YEAR(A.DBILLDATE) = Z.IYEAR AND MONTH(A.DBILLDATE) = Z.IMONTH
      WHERE I.DIM_INVENTORY <> 'X'
	GROUP BY I.DIM_INVENTORY
 
END